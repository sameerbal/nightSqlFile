package sqlPathReading;

import java.io.File;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Properties;
import java.util.Scanner;

public class SqlFileReturn {
	
	public static Properties prop;
	public static SqlFileReturn path = new SqlFileReturn();
	public static SqlQueryReturn original = new SqlQueryReturn();
	//public static String input[] = new arrayOfNames[];
	public static void userInput() throws Exception
	{
	String sourceDirectory,targetDirectory;
	Scanner scan = new Scanner(System.in);
		System.out.print("Enter serial number of SQL separated with comma(,)"+" : ");
		String input = scan.nextLine();
		String StringarrayOfNames[] = input.split(",");
		int[] arrayOfNames = new int[StringarrayOfNames.length];
	      for (int i = 0; i < StringarrayOfNames.length; i++) {
	         String numberAsString = StringarrayOfNames[i];
	         arrayOfNames[i] = Integer.parseInt(numberAsString);
	      }
	     // String arrayOfNames[] = new String[intArrayOfNames.length];

			//for (int i = 0; i < intArrayOfNames.length; i++)
				//arrayOfNames[i] = String.valueOf(intArrayOfNames[i]);

	System.out.println("Enter Source Directory path :");
	sourceDirectory = scan.nextLine();
	System.out.println("Enter Target Directory path :");
	targetDirectory = scan.nextLine();
	path.SourceFiles(arrayOfNames,sourceDirectory);
	path.TargetFiles(arrayOfNames,targetDirectory);
	}

	public static void SourceFiles(int[] arrayOfNames,String sourceDirectory) throws Exception
	{
	int i,j;
	List<String> results = new ArrayList<String>();


	File[] files = new File(sourceDirectory).listFiles();
	//If this pathname does not denote a directory, then listFiles() returns null. 

	for (File file : files) {
	    if (file.isFile()) {
	        results.add(file.getName());
	    }
	}
	for(i =0;i<arrayOfNames.length;i++)
	{
		for(j=0;j<results.size();j++)
		{
			if(arrayOfNames[i]==(Integer.parseInt(results.get(j).substring(0, 3))))
			{
				original.sqlSourceQuery((results.get(j)),sourceDirectory);
			}
		}
	}
	}

	public static void TargetFiles(int[] arrayOfNames,String targetDirectory) throws Exception
	{
	//String[] input = path.userInput();
	int i,j;
	List<String> results = new ArrayList<String>();


	File[] files = new File(targetDirectory).listFiles();
	//If this pathname does not denote a directory, then listFiles() returns null. 

	for (File file : files) {
	    if (file.isFile()) {
	        results.add(file.getName());
	    }
	}
	for(i =0;i<arrayOfNames.length;i++)
	{
		for(j=0;j<results.size();j++)
		{
			if(arrayOfNames[i]==(Integer.parseInt(results.get(j).substring(0, 3))))
			{
				original.sqlTargetQuery((results.get(j)),targetDirectory);
			}
		}
	}
	}

}
